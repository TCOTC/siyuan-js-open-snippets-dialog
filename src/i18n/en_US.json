{
  "pluginDisplayName": "Code Snippets Manager",
  "pluginNotSupportedInPublish": "plugin not supported in publish service",
  "loadConfigError": "Configuration file error, configuration file has been removed",
  "loadConfigIncompatible": "The plugin configuration file is of a higher version, please upgrade the plugin, or save once plugin settings to overwrite the current configuration",
  "pluginOnload": " plugin enabled",
  "pluginOnunload": " plugin disabled",
  "pluginUninstall": " plugin uninstalled",
  "getSnippetsListFailed": "Failed to get snippets list",
  "getSnippetFailed": "Failed to get snippet",
  "saveSnippetsListFailed": "Failed to save snippets list",
  "snippetDialogParamError": "Failed to open snippet dialog, missing snippet parameter: ",
  "updateSnippetElementParamError": "Failed to update snippet element, missing snippet parameter",
  "unknownButtonType": "Unknown button type",
  "emptySnippet": "Empty snippet",
  "pluginConfig": "Plugin settings",
  "reloadUI": "Reload UI",
  "search": "Search",
  "add": "Add",
  "edit": "Edit",
  "delete": "Delete",
  "cancel": "Cancel",
  "preview": "Preview",
  "save": "Save",
  "new": "New",
  "confirm": "Confirm",
  "title": "Title",
  "codeSnippet": "Code snippet",
  "codeSnippetCSS": "CSS code snippet",
  "codeSnippetJS": "JavaScript code snippet",
  "openSnippetsManager": "Open code snippets manager",
  "deleteConfirm": "⚠️ Delete operation confirmation",
  "deleteConfirmDescription": "Are you sure you want to delete snippet${x}?",
  "cancelConfirm": "⚠️ Cancel operation confirmation",
  "snippet": "Snippet",
  "snippetName": "Title",
  "snippetContent": "Code content",
  "snippetEnabled": "Switch status",
  "snippetId": "ID",
  "snippetType": "Type",
  "cancelConfirmEditSnippet": "${x} has unsaved modifications, are you sure you want to give up editing snippet${y}?",
  "cancelConfirmNewSnippet": "There are unsaved modifications, are you sure you want to exit the newly created snippet${y}?",
  "continueEdit": "Continue edit",
  "giveUpEdit": "Give up edit",
  "deleteSnippet": "Delete snippet",
  "deleteSnippetFailed": "Failed to delete snippet, missing parameter ID or type",
  "getPluginLogFailed": "Failed to get plugin log",
  "writePluginLogFailed": "Failed to write plugin log",
  "realTimePreview": "CSS snippet real-time preview",
  "realTimePreviewDescription": "When you modify the CSS snippet in the snippet floating window, the changes will be applied to the current interface in real time for preview, but will not be saved in real time",
  "realTimePreviewHandlerFunctionError": "CSS snippet real-time preview function error, snippet type is not CSS",
  "newSnippetEnabled": "Enable new snippets by default",
  "consoleDebug": "Output logs of the plugin in the developer tool",
  "consoleDebugDescription": "Only for debugging when the plugin encounters an exception, do not open unless necessary",
  "feedbackIssue": "Feedback issues",
  "feedbackIssueDescription": "Open plugin's repository page, welcome to click Star to support the author",
  "feedbackIssueButton": "Open GitHub",
  "notificationSwitch": "Notification master switch",
  "ignoreNoticeButtonAriaLabel": "this notice can be re-enabled in plugin settings",
  "noLongerShow": "Don't show again",
  "reloadUIAfterModifyJS": "Modifying JS snippets requires reloading the interface to ensure that the changes take effect ${ignoreNoticeButton}",
  "reloadUIAfterModifyJSNotice": "Notice: Modifying JS snippets",
  "reloadUIAfterModifyJSNoticeDescription": "Modifying JS snippets requires reloading the interface to ensure that the changes take effect, you can click the \"Reload UI\" button in the plugin's top bar menu, or bind the \"Reload UI\" operation to a shortcut in <span class='ariaLabel' data-action='settingsKeymap' aria-label='click to jump' data-position='north' style='cursor: pointer; color: var(--b3-theme-primary);'>[Settings - Shortcuts]</span>",
  "reloadUIAfterModifyJSNoticeDescriptionMobile": "Modifying JS snippets requires reloading the interface to ensure that the changes take effect, you can click the \"Reload UI\" button in the plugin's top bar menu",
  "snippetSearchType": "Snippet search",
  "snippetSearchTypeDescription": "Search snippets by title or content",
  "snippetSearchTypeDisabled": "Disabled",
  "snippetSearchTypeName": "Search title",
  "snippetSearchTypeContent": "Search content",
  "snippetSearchTypeNameAndContent": "Search name and content",
  "snippetSortType": "Snippet sort type",
  "snippetSortTypeDescription": "The sorting method of snippets in the management menu. When set to custom sort, you can adjust the order by dragging",
  "fixedSort": "Fixed sort",
  "customSort": "Custom sort",
  "enabledASC": "Enabled first",
  "enabledDESC": "Disabled first",
  "fileNameASC": "File name ascending",
  "fileNameDESC": "File name descending",
  "fileNameNatASC": "File name natural ascending",
  "fileNameNatDESC": "File name natural descending",
  "createdASC": "Created time ascending",
  "createdDESC": "Created time descending",
  "editorIndentUnit": "Editor indent unit",
  "editorIndentUnitDescription": "The indent unit for Tab key in snippet editor",
  "editorIndentUnitFollowSiyuan": "Follow SiYuan settings",
  "editorIndentUnitTab1": "1 tab",
  "editorIndentUnitTab2": "2 tabs",
  "editorIndentUnitSpace1": "1 space",
  "editorIndentUnitSpace2": "2 spaces",
  "editorIndentUnitSpace3": "3 spaces",
  "editorIndentUnitSpace4": "4 spaces",
  "editorIndentUnitSpace5": "5 spaces",
  "editorIndentUnitSpace6": "6 spaces",
  "editorIndentUnitSpace7": "7 spaces",
  "editorIndentUnitSpace8": "8 spaces",
  "duplicate": "Duplicate",
  "duplicateSnippetFailed": "Failed to create duplicate snippet",
  "showDuplicateButton": "Show Duplicate button in management menu",
  "showDuplicateButtonDescription": "Show the Duplicate button in the management menu's snippet list. Clicking it creates a duplicate of the current snippet with the same content and inserts it above the current snippet",
  "showDeleteButton": "Show Delete button in management menu",
  "showDeleteButtonDescription": "Show the Delete button in the management menu's snippet list. Clicking it deletes the snippet",
  "showEditButton": "Show Edit button in management menu",
  "showEditButtonDescription": "Show the Edit button in the management menu's snippet list. Clicking it opens the snippet editor",
  "openNativeSnippets": "Native Snippets Window",
  "openNativeSnippetsDescription": "Click to open SiYuan's native snippets management window",
  "openNativeSnippetsWindow": "Open Window",
  "fileWatchEnabled": "Local File Watch",
  "fileWatchEnabledDescription": "Select the file watching working mode, including disabled, enabled (It may affect performance to some extent; it's recommended to enable it only when necessary) and load all code snippets on startup only (.css and .js files). This feature is still unstable; please provide feedback if you encounter any issues.",
  "fileWatchModeDisabled": "Disabled file watch",
  "fileWatchModeEnabled": "Enabled file watch",
  "fileWatchModeLoadOnly": "Load once on startup",
  "fileWatchPath": "Watch Folder Path",
  "fileWatchPathDescription": "The folder path to monitor, only supports relative paths",
  "fileWatchInterval": "Watch Polling Interval",
  "fileWatchIntervalDescription": "Time interval (seconds) to check for file changes, recommended 5 - 30 seconds",
  "fileWatchError": "File watching error",
  "fileWatchInvalidPath": "Invalid folder path",
  "fileWatchNoSupportAbsPath": "Absolute path is not supported",
  "reloadUIConfirm": "⚠️ Reload UI Confirm",
  "reloadUIConfirmDescription": "After reloading the interface, the unsaved code snippet modifications will be lost, are you sure you want to reload the interface?",
  "reloadUIFailed": "Failed to reload UI",
  "addFirstCSSSnippet": "Add first CSS snippet",
  "addFirstJSSnippet": "Add first JS snippet",
  "exportSnippets": "Export all snippets",
  "exportSnippetsDescription": "Export all snippets as JSON file, can be used for backup or sharing",
  "export": "Export",
  "importSnippetsWithAppend": "Import and append snippets",
  "importSnippetsWithAppendDescription": "Import snippets from JSON file, will append to current snippet list, will not overwrite current snippets",
  "importWithAppend": "Import and append",
  "importSnippetsWithOverwrite": "Import and overwrite all snippets",
  "importSnippetsWithOverwriteDescription": "Import snippets from JSON file, will overwrite all current snippets, please operate with caution",
  "importWithOverwrite": "Import and overwrite",
  "exportSnippetsSuccess": "Snippets exported successfully",
  "exportSnippetsFailed": "Failed to export snippets",
  "importSnippetsFailed": "Failed to import snippets",
  "importSnippetsInvalidFormat": "Invalid import file format, please select the correct JSON file",
  "importSnippetsAppendSuccess": "Snippets imported and appended successfully",
  "importSnippetsOverwriteSuccess": "Snippets imported and overwritten successfully",
  "backupCreateFailed": "Backup creation failed",
  "readFolderFailed": "Failed to read folder",
  "uploadImportFileFailed": "Failed to upload import file",
  "unzipFailed": "Failed to unzip",
  "noValidJsonFileFound": "No valid JSON file found in the compressed package",
  "readUnzippedJsonFileFailed": "Failed to read unzipped JSON file",
  "importFileContentEmpty": "Import file content is empty",
  "importFileNotValidJson": "File content is not valid JSON format, please check the file content",
  "autoReloadUIAfterModifyJS": "Auto reload UI",
  "autoReloadUIAfterModifyJSDescription": "After JS snippet modification, if there's no active snippet editor, automatically reload the UI",
  "multipleSnippetEditors": "Open multiple snippet editors simultaneously",
  "multipleSnippetEditorsDescription": "When enabled, allows opening multiple snippet editors at the same time; when disabled, only one modal snippet editor can be opened",
  "snippetOptionClickBehavior": "Behavior when clicking snippet option",
  "snippetOptionClickBehaviorDescription": "The action performed when clicking a snippet option in the management menu",
  "snippetOptionClickBehaviorNone": "Do nothing",
  "snippetOptionClickBehaviorToggle": "Toggle snippet enabled status",
  "snippetOptionClickBehaviorOpenEditor": "Open snippet editor",
  "saveConfigFailed": "Failed to save configuration",
  "removeConfigFailed": "Failed to remove configuration",
  "topBarPosition": "Top bar button position",
  "topBarPositionDescription": "The position of the snippet manager button in the top bar, takes effect after reloading the interface",
  "topBarPositionLeft": "Left",
  "topBarPositionRight": "Right"
}
